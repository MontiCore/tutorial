/* (c) https://github.com/MontiCore/monticore */
package tutorial;

grammar SimpleJava extends de.monticore.types.MCSimpleGenericTypes,
                                        de.monticore.expressions.CommonExpressions,
                                        de.monticore.expressions.AssignmentExpressions,
                                        de.monticore.expressions.BitExpressions,
                                        de.monticore.literals.MCCommonLiterals,
                                        de.monticore.symbols.OOSymbols {

  JavaCompilationUnit = MCPackageDeclaration?
                        MCImportStatement*
                        JavaArtifact;

  scope symbol JavaArtifact implements OOType = "class" Name ("extends" superType:MCType)? "{" JavaElement* "}";

  interface JavaElement;

  scope symbol JavaMethod implements JavaElement, Method = MCReturnType
                                                           Name
                                                           FormalParameters
                                                           "{" JavaBlock "}";


  FormalParameters = "(" FormalParameter* ")";

  FormalParameter = MCType Name;

  JavaBlock = (JavaVarDecl | Expression)*;

  symbol JavaVarDecl implements JavaElement, Field = MCType Name ("=" Expression)?;

}
